{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Dataset:\n",
    "# https://data.london.gov.uk/dataset/uk-house-price-index"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(310, 6)\n"
     ]
    }
   ],
   "source": [
    "house = pd.read_csv('House Price_by type.csv')\n",
    "print(house.shape)   # Dimesions of the dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Year</th>\n",
       "      <th>Month</th>\n",
       "      <th>Detached</th>\n",
       "      <th>Semi Detached</th>\n",
       "      <th>Terraced</th>\n",
       "      <th>Flat</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1995</td>\n",
       "      <td>Jan</td>\n",
       "      <td>161449</td>\n",
       "      <td>95898</td>\n",
       "      <td>73706</td>\n",
       "      <td>64619</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1995</td>\n",
       "      <td>Feb</td>\n",
       "      <td>157449</td>\n",
       "      <td>96084</td>\n",
       "      <td>73757</td>\n",
       "      <td>60359</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1995</td>\n",
       "      <td>Mar</td>\n",
       "      <td>156090</td>\n",
       "      <td>94981</td>\n",
       "      <td>73571</td>\n",
       "      <td>64186</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1995</td>\n",
       "      <td>Apr</td>\n",
       "      <td>156932</td>\n",
       "      <td>95193</td>\n",
       "      <td>73990</td>\n",
       "      <td>65099</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1995</td>\n",
       "      <td>May</td>\n",
       "      <td>158778</td>\n",
       "      <td>96727</td>\n",
       "      <td>75063</td>\n",
       "      <td>65718</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Year Month  Detached  Semi Detached  Terraced   Flat\n",
       "0  1995   Jan    161449          95898     73706  64619\n",
       "1  1995   Feb    157449          96084     73757  60359\n",
       "2  1995   Mar    156090          94981     73571  64186\n",
       "3  1995   Apr    156932          95193     73990  65099\n",
       "4  1995   May    158778          96727     75063  65718"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# The whole dataset\n",
    "house.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Year</th>\n",
       "      <th>Month</th>\n",
       "      <th>Detached</th>\n",
       "      <th>Semi Detached</th>\n",
       "      <th>Terraced</th>\n",
       "      <th>Flat</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1995</td>\n",
       "      <td>Jan</td>\n",
       "      <td>161449</td>\n",
       "      <td>95898</td>\n",
       "      <td>73706</td>\n",
       "      <td>64619</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>1996</td>\n",
       "      <td>Jan</td>\n",
       "      <td>159926</td>\n",
       "      <td>96393</td>\n",
       "      <td>74754</td>\n",
       "      <td>65870</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>1997</td>\n",
       "      <td>Jan</td>\n",
       "      <td>176010</td>\n",
       "      <td>105732</td>\n",
       "      <td>82195</td>\n",
       "      <td>73141</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>1998</td>\n",
       "      <td>Jan</td>\n",
       "      <td>212537</td>\n",
       "      <td>124936</td>\n",
       "      <td>97066</td>\n",
       "      <td>85657</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48</th>\n",
       "      <td>1999</td>\n",
       "      <td>Jan</td>\n",
       "      <td>226545</td>\n",
       "      <td>134708</td>\n",
       "      <td>103316</td>\n",
       "      <td>93692</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Year Month  Detached  Semi Detached  Terraced   Flat\n",
       "0   1995   Jan    161449          95898     73706  64619\n",
       "12  1996   Jan    159926          96393     74754  65870\n",
       "24  1997   Jan    176010         105732     82195  73141\n",
       "36  1998   Jan    212537         124936     97066  85657\n",
       "48  1999   Jan    226545         134708    103316  93692"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Find January data\n",
    "# All the December months for years 1995 - 2019\n",
    "\n",
    "houseJan = house[house['Month']=='Jan']\n",
    "houseJan.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Year</th>\n",
       "      <th>Month</th>\n",
       "      <th>Detached</th>\n",
       "      <th>Semi Detached</th>\n",
       "      <th>Terraced</th>\n",
       "      <th>Flat</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1995</td>\n",
       "      <td>Jan</td>\n",
       "      <td>161449</td>\n",
       "      <td>95898</td>\n",
       "      <td>73706</td>\n",
       "      <td>64619</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>1996</td>\n",
       "      <td>Jan</td>\n",
       "      <td>159926</td>\n",
       "      <td>96393</td>\n",
       "      <td>74754</td>\n",
       "      <td>65870</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>1997</td>\n",
       "      <td>Jan</td>\n",
       "      <td>176010</td>\n",
       "      <td>105732</td>\n",
       "      <td>82195</td>\n",
       "      <td>73141</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>1998</td>\n",
       "      <td>Jan</td>\n",
       "      <td>212537</td>\n",
       "      <td>124936</td>\n",
       "      <td>97066</td>\n",
       "      <td>85657</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48</th>\n",
       "      <td>1999</td>\n",
       "      <td>Jan</td>\n",
       "      <td>226545</td>\n",
       "      <td>134708</td>\n",
       "      <td>103316</td>\n",
       "      <td>93692</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Year Month  Detached  Semi Detached  Terraced   Flat\n",
       "0   1995   Jan    161449          95898     73706  64619\n",
       "12  1996   Jan    159926          96393     74754  65870\n",
       "24  1997   Jan    176010         105732     82195  73141\n",
       "36  1998   Jan    212537         124936     97066  85657\n",
       "48  1999   Jan    226545         134708    103316  93692"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "houseJan.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x223acd24cd0>"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Line Graph of Detached house prices against Year\n",
    "plt.plot(houseJan['Year'], houseJan['Detached'], label='Detached')\n",
    "plt.plot(houseJan['Year'], houseJan['Semi Detached'], label='Semi Detached')\n",
    "plt.plot(houseJan['Year'], houseJan['Terraced'], label='Terraced')\n",
    "plt.plot(houseJan['Year'], houseJan['Flat'], label='Flat')\n",
    "\n",
    "plt.xlabel('Year')\n",
    "plt.ylabel('Detached House Sale Price (£)')\n",
    "plt.title('House Type prices against Year', fontsize=15)\n",
    "plt.legend()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create a new dataframe for all dates. So we can use it for a scatter plot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Detached house prices against Year')"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Scatter Plot of Detached house prices against Year\n",
    "\n",
    "### make it for all dates\n",
    "\n",
    "plt.scatter(houseJan['Year'], houseJan['Detached'], marker='x', alpha=1.0, s=5)   \n",
    "\n",
    "plt.xlabel('Year')\n",
    "plt.ylabel('Detached House Sale Price (£)')\n",
    "plt.title('Detached house prices against Year')"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
